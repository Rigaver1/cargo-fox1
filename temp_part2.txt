          {clientsOpen && (
            <div className="ml-12 mt-1 mb-2 space-y-1">
              <Link to="/clients" onClick={() => isMobile && onClose()} className="block text-sm text-gray-700 hover:text-gray-900">Все клиенты</Link>
              <Link to="/clients/telegram" onClick={() => isMobile && onClose()} className="block text-sm text-gray-700 hover:text-gray-900">Telegram контакты</Link>
              <Link to="/clients/new" onClick={() => isMobile && onClose()} className="block text-sm text-green-600 hover:text-green-700 flex items-center">
                <Plus size={14} className="mr-1" />
                Добавить клиента
              </Link>
            </div>
          )}
          <button
            type="button"
            onClick={() => { setSuppliersOpen(!suppliersOpen); go('/suppliers') }}
            className={`w-full text-left flex items-center px-5 py-3 text-sm transition-all duration-200 ${
              isSuppliersSection ? 'bg-indigo-50 text-indigo-700 border-l-4 border-indigo-500' : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'
            }`}
          >
            <div className={`mr-3 p-1.5 rounded-lg ${isSuppliersSection ? 'bg-indigo-100 text-indigo-600' : 'text-red-600'}`}><Factory size={18} /></div>
            <span className="flex-1 font-medium">Поставщики</span>
          </button>
          {suppliersOpen && (
            <div className="ml-12 mt-1 mb-2 space-y-1">
              <Link to="/suppliers" onClick={() => isMobile && onClose()} className="block text-sm text-gray-700 hover:text-gray-900">Все поставщики</Link>
              <Link to="/suppliers/wechat" onClick={() => isMobile && onClose()} className="block text-sm text-gray-700 hover:text-gray-900">WeChat контакты</Link>
              <Link to="/suppliers/new" onClick={() => isMobile && onClose()} className="block text-sm text-green-600 hover:text-green-700 flex items-center">
                <Plus size={14} className="mr-1" />
                Добавить поставщика
              </Link>
            </div>
          )}
          <button
            type="button"
            onClick={() => { setIntegrationsOpen(!integrationsOpen); go('/integrations') }}
            className={`w-full text-left flex items-center px-5 py-3 text-sm transition-all duration-200 ${
              isIntegrationsSection ? 'bg-indigo-50 text-indigo-700 border-l-4 border-indigo-500' : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'
            }`}
          >
            <div className={`mr-3 p-1.5 rounded-lg ${isIntegrationsSection ? 'bg-indigo-100 text-indigo-600' : 'text-gray-600'}`}><Settings size={18} /></div>
            <span className="flex-1 font-medium">Подключения</span>
          </button>
          {integrationsOpen && (
            <div className="ml-12 mt-1 mb-2 space-y-1">
              <Link to="/integrations/telegram" onClick={() => isMobile && onClose()} className="block text-sm text-gray-700 hover:text-gray-900">Telegram (личный)</Link>
              <Link to="/integrations/wechat" onClick={() => isMobile && onClose()} className="block text-sm text-gray-700 hover:text-gray-900">WeChat</Link>
              <Link to="/integrations/whatsapp" onClick={() => isMobile && onClose()} className="block text-sm text-gray-700 hover:text-gray-900">WhatsApp</Link>
            </div>
          )}
        </div>

        {/* Дополнительно */}
        <div className="mb-4">
          <div className="px-5 mb-2 mt-4 flex items-center text-xs font-medium text-gray-500 uppercase tracking-wider">
            <span className="mr-2 opacity-75">ДОПОЛНИТЕЛЬНО</span>
            <div className="flex-1 border-t border-gray-200"></div>
          </div>
          <Link to="/settings" onClick={isMobile ? onClose : undefined} className={`flex items-center px-5 py-3 text-sm transition-all duration-200 ${location.pathname === '/settings' ? 'bg-indigo-50 text-indigo-700 border-l-4 border-indigo-500' : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'}`}>
            <div className={`mr-3 p-1.5 rounded-lg ${location.pathname === '/settings' ? 'bg-indigo-100 text-indigo-600' : 'text-gray-600'}`}><Settings size={18} /></div>
            <span className="flex-1 font-medium">Настройки</span>
          </Link>
          <Link to="/help" onClick={isMobile ? onClose : undefined} className={`flex items-center px-5 py-3 text-sm transition-all duration-200 ${location.pathname === '/help' ? 'bg-indigo-50 text-indigo-700 border-l-4 border-indigo-500' : 'text-gray-700 hover:bg-gray-50 hover:text-gray-900'}`}>
            <div className={`mr-3 p-1.5 rounded-lg ${location.pathname === '/help' ? 'bg-indigo-100 text-indigo-600' : 'text-gray-600'}`}><FileText size={18} /></div>
            <span className="flex-1 font-medium">Справка</span>
          </Link>
        </div>
      </nav>

      {/* Низ */}
      <div className="p-5 border-t border-gray-200">
        <div className="flex items-center">
          <div className="bg-gradient-to-r from-blue-500 to-indigo-600 w-10 h-10 rounded-xl flex items-center justify-center mr-3 shadow-md">
            <span className="text-white font-bold text-xl">Л</span>
          </div>
          <div className="flex-1">
            <div className="font-medium text-gray-900">Лисёнок</div>
            <div className="text-xs text-gray-500 mt-0.5">администратор</div>
          </div>
          <div className="relative">
            <ChevronDown size={16} className="text-gray-500" />
          </div>
        </div>
        <div className="mt-4 flex items-center text-xs text-gray-500">
          <div className="w-2 h-2 bg-green-500 rounded-full mr-2"></div>
          <span>Система работает нормально</span>
        </div>
      </div>
    </div>
  )
}

export default Sidebar
